sudo: required
language: java
install: false 

services:
  - docker

jobs:
  include:
    - stage: build (compile, unit test, package)
      jdk: openjdk10
      script: travis/build.sh

    - stage: smoke and acceptance test
      install: skip  # without this there's a `git clone` and `gradlew assemble` executed! 
      script: travis/acceptanceTest.sh
      
    - stage: release
      if: branch = master
      install: skip
      script: travis/release.sh
    
    - stage: production

      if: branch = master # depends on release stage so this should be redundant

      # Need to install the JDK to build the Java Integration Tests
      jdk: openjdk10

      # Minikube installation taken from: https://github.com/LiliC/travis-minikube/blob/minikube-30-kube-1.12/.travis.yml

      # We need the systemd for the kubeadm and it's default from 16.04+
      dist: xenial

      env: 
        - CHANGE_MINIKUBE_NONE_USER=true
        - K8S_VER=v1.12.0
        - TF_INPUT=false
        - TF_VER=0.12.16  

      before_script:
        # Install minikube and kubectl
        # Make root mounted as rshared to fix kube-dns issues.
        - sudo mount --make-rshared /
        - echo "Installing minikube and kubectl version $K8S_VER"
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.30.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        - sudo minikube start --vm-driver=none --bootstrapper=kubeadm --kubernetes-version=v1.12.0 --extra-config=apiserver.authorization-mode=RBAC
        # Fix the kubectl context, as it's often stale.
        - minikube update-context
        # Wait for Kubernetes to be up and ready.
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
        - kubectl cluster-info
        
        - echo "Installing Terraform version $TF_VER"
        - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/${TF_VER}/terraform_${TF_VER}_linux_amd64.zip
        - unzip /tmp/terraform.zip -d /tmp
        - mkdir ~/bin
        - mv /tmp/terraform ~/bin
        - export PATH="~/bin:$PATH"


      script: terraform plan ./terraform #travis/k8s-deploy.sh

      deploy:
        - provider: script
          skip_cleanup: true
          script: terraform apply .terraform
          on:
            branch: master

notifications:
  email:
    recipients:
      - a.person@acme.com
      - a.n.other@acme.com
    on_success: never # default: change
    on_failure: never # default: always
